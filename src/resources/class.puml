@startuml
'https://plantuml.com/class-diagram

package "DynamoDBModels" {
    class member {
    - zipCode : String
    - id : String
    - email : String
    - active : Boolean
    - listings : Set<String>
    }

    class item {
    - id : String
    - title : String
    - description : String
    - size : String
    - type : String
    - exchanged : Boolean
    - images : Set<String>
}

}
package "DAO" {
    class itemDao {
    - dynamoDBMapper
    - metricsPublisher
    + getItem()
    + saveItem()
    }

    class memberDao {
    - dynamoDBMapper
    - metricsPublisher
    + saveMember()
    + getMember()
    }
}

package "Activities" {
note "GetItemActivity: this class is used to return a single item or a list of items belonging to a member" as N2

    class GetItemActivity {
    + handleRequest()
    }

    class UpdateItemActivity {
    + handleRequest()
    }

    class CreateItemActivity {
    + handleRequest()
    }

    class DeleteItemActivity {
    + handleRequest()
    }

    class GetMemberActivity {
    + handleRequest()
    }

    class UpdateMemberActivity {
    + handleRequest()
    }

    class CreateMemberActivity {
    + handleRequest()
    }

    class SearchItemsActivity {
    + handleRequest()
    }

    class AddItemToMemberListingActivity {
    + handleRequest
    }
}

package "Lambda" {

    package "LambdaRequest" {

note "All of these classes will have a builder and the variables will be final" as N1
        class getItemRequest{
        - Final itemId : String
        }

        class UpdateItemRequest {
         - FINAL *All FINAL*
        }

        class CreateItemRequest {
        - final itemId : String (member's id)
        - FINAL (all item instance var EXCEPT id & email allowed. *ALL FINAL* id and email will be assigned in activty)
        }

        class DeleteItemRequest {
        - final itemId : String
        }

        class GetMemberItemsRequest {
        - final memberId : String
        }

        class UpdateMemberRequest {
        - FINAL (all fields except id allowed. *ALL FINAL*)
        }

        class CreateMemberRequest {
        - Final (all fields except id allowed. id will be assigned in Activity. *All Final*)
        }

        class SearchItemsRequest {
        - final criteria : String
        }

        class AddItemToMemberListingRequest {
        - final itemId : String
        - final memberId: String
        }

        class "AuthenticatedLambdaRequest" {}

        class "LambdaRequest" {}
    }


    package "LambdaResult" {
note "All of these classes will have a builder and the variables will be final" as N3
        class GetItemResult {
        - final ItemModel
        - final itemId
        + getItem() : List<Item>
        _________
        + override toString()
        }

        class UpdateItemResult {
        - final MemberModel
        + getMemberItem() : Item
        ________
        + override toString()
        }

        class CreateItemResult {
        - final ItemModel
        + getItem() : ItemModel
        _______
        + override toString()
        }

        class DeleteItemResult {
        - final ItemModel
        + getItem() : ItemModel
        ________
        + override toString()
        }

        class GetMemberItemsResult {
        - final List<ItemModel>
        + getItemsList() : List<ItemModel>
        }

        class UpdateMemberResult {
        - final MemberModel
        + getMember() : MemberModel
        ______________
        + override toString()
        }

        class CreateMemberResult{
        - final MemberModel
        + getMember() : MemberModel
        _______________
        + override toString()
        }

        class AddItemToMemberListingResult {
        - final List<ItemModel>
        + getItemList() : List<ItemModel>
        --------------
        + override toString()
        }

        class SearchItemsResult {
        - final List<MemberModel>
        + getListings() : List<ItemModel>
        }
    }
    class LambdaActivityRunner {}
}

package "Models" {
    class ItemModel{
    - final (all instance var)
    + getters() (all instance var)
    + override equals()
    + override hashCode()
    ________________
    + Builder all instance var
    }

    class MemberModel {
     - final (all instance var)
     + getters() (all instance var)
     + override equals()
     + override hashCode()
     ________________
     + Builder all instance var
     }
}

package "Lambdas" {
    class getItemLambda {
    + handleRequest(UNAUTHENTICATED) : LambdaResponse
    }

    class UpdateItemLambda {
    + handleRequest(AUTHENTICATED) : LambdaResponse
    }

    class CreateItemLambda {
    + handleRequest(AUTHENTICATED) : LambdaResponse
    }

    class DeleteItemLambda {
    + handleRequest(AUTHENTICATED) : LambdaResponse
    }

    class AddItemToMemberListingsLambda {
    + handleRequest(AUTHENTICATED) : LambdaResponse
    }

    class GetMemberListingsLambda {
    + handleRequest(AUTHENTICATED) : LambdaResponse
    }

    class UpdateMemberItemsLambda {
    + handleRequest(AUTHENTICATED) : LambdaResponse
    }

    class CreateMemberLambda{
    + handleRequest(AUTHENTICATED) : LambdaResponse
    }

    class SearchItemsLambda {
    + handleRequest(UNAUTHENTICATED) : LambdaResponse
    }
    }

@enduml